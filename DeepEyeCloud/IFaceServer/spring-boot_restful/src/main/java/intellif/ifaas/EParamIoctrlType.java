/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package intellif.ifaas;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum EParamIoctrlType implements org.apache.thrift.TEnum {
  PARAM_IOCTRL_BLACKLIST(0),
  PARAM_IOCTRL_VERIFYRULE(1),
  PARAM_IOCTRL_TASKINFO(2),
  PARAM_IOCTRL_SNAPER_FLAG(3),
  PARAM_IOCTRL_SNAPER_DECTYPE(4),
  PARAM_IOCTRL_PERSON(5),
  PARAM_IOCTRL_CAMERA(6),
  PARAM_IOCTRL_REDLIST(7),
  PARAM_IOCTRL_SNAPERCTRL(8),
  PARAM_IOCTRL_LONGTERM_FILT(9),
  PARAM_IOCTRL_CID_IMPORT(10),
  PARAM_IOCTRL_PERSON_CLASS(11),
  PARAM_IOCTRL_FEATURE_UPDATE(12),
  PARAM_IOCTRL_FACE_RECALC(13),
  PARAM_IOCTRL_JUZHU_IMPORT(14),
  PARAM_IOCTRL_BLACK_DETAIL(15),
  PARAM_IOCTRL_OTHER_IMPORT(16),
  PARAM_IOCTRL_RED_IMPORT(17),
  PARAM_IOCTRL_FILTER_UPDATE(18),
  PARAM_IOCTRL_FAKE_IMPORT(19);

  private final int value;

  private EParamIoctrlType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static EParamIoctrlType findByValue(int value) { 
    switch (value) {
      case 0:
        return PARAM_IOCTRL_BLACKLIST;
      case 1:
        return PARAM_IOCTRL_VERIFYRULE;
      case 2:
        return PARAM_IOCTRL_TASKINFO;
      case 3:
        return PARAM_IOCTRL_SNAPER_FLAG;
      case 4:
        return PARAM_IOCTRL_SNAPER_DECTYPE;
      case 5:
        return PARAM_IOCTRL_PERSON;
      case 6:
        return PARAM_IOCTRL_CAMERA;
      case 7:
        return PARAM_IOCTRL_REDLIST;
      case 8:
        return PARAM_IOCTRL_SNAPERCTRL;
      case 9:
        return PARAM_IOCTRL_LONGTERM_FILT;
      case 10:
        return PARAM_IOCTRL_CID_IMPORT;
      case 11:
        return PARAM_IOCTRL_PERSON_CLASS;
      case 12:
        return PARAM_IOCTRL_FEATURE_UPDATE;
      case 13:
        return PARAM_IOCTRL_FACE_RECALC;
      case 14:
        return PARAM_IOCTRL_JUZHU_IMPORT;
      case 15:
        return PARAM_IOCTRL_BLACK_DETAIL;
      case 16:
        return PARAM_IOCTRL_OTHER_IMPORT;
      case 17:
        return PARAM_IOCTRL_RED_IMPORT;
      case 18:
        return PARAM_IOCTRL_FILTER_UPDATE;
      case 19:
        return PARAM_IOCTRL_FAKE_IMPORT;
      default:
        return null;
    }
  }
}
